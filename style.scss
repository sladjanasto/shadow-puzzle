@use "sass:color";
@use "sass:list";
@use "sass:map";
@use "sass:meta";
@import "scss/variables.scss";
@import "scss/mixins.scss";
html {
  touch-action: manipulation;
}
body {
  background: color.scale(black, $lightness: 2%);
  max-height: 100vh;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  @include display;
  overflow: hidden;
}
.wrapper {
  @include size(100vmin);
  display: grid;
  position: relative;
}
.container {
  @include size(40vmin);
  @include display;
  grid-column: 2 / 4;
  grid-row: 2 / 4;
  box-sizing: border-box;
}
.shadow {
  @include size(25vmin);
  position: relative;
  .shape {
    visibility: hidden;
    @include size(40vmin);
    background: color.scale(black, $lightness: 25%);
    position: absolute;
    z-index: 0;
    clip-path: polygon(
      0% 0%,
      32% 0%,
      32% 31%,
      47.7% 15.2%,
      63.5% 30.9%,
      70% 25%,
      92.5% 47%,
      92% 91%,
      62.5% 62.5%,
      31.5% 94%,
      31.5% 62%,
      16.5% 47.6%,
      16.5% 16%
    );
    transform: translate(-8vmin, 1vmin);
  }
}
.tans {
  @include size(100%);
  position: absolute;
  pointer-events: none;
  transition: transform 0.5s ease;
  z-index: 1;
}
.hide_input {
  @include position(absolute, -9999999px, 0);
}
@include set-tans-shapes($tansShapes);
/* .task{ background: black; } */
.rotation {
  @include button-style(transparent, gray, 6vmin);
  @include position(absolute, 0, 0);
  font-size: 4vmin;
  visibility: hidden;
  color: white;
  padding: 0.5vmin;
  align-items: center;
  justify-content: center;
}
.start-button {
  @include button-style(#345c3a, gray, 10vmin);
  @include position(absolute, 0, -17vmin);
  color: white;
}
.tanagram-box {
  @include size(25vmin);
  border: 0.5vmin solid color.scale(black, $lightness: 2%);
  border-radius: 2vmin;
  background: color.scale(black, $lightness: 5%);
  @include tanagram-boxes($nth-child-grid);
  box-sizing: border-box;
  position: relative;
  z-index: -1;
}
.start {
  &:focus {
    & + .border {
      visibility: visible;
    }
    & + .border::before {
      animation: rotate 2s linear infinite;
    }
  }
  &:checked {
    & ~ .shadow {
      background: transparent;
      .shape {
        visibility: visible;
      }
    }
    @include set-tans-position($tansShapes);
    & ~ .shadow .tans {
      pointer-events: all;
    }
    & ~ label.start-button {
      visibility: hidden;
    }
  }
}
.tan_blocked {
  @include size(100%);
  border-radius: 2vmin;
  filter: blur(8px);
}
@include tans-rotation;
@include create-list-Of-correct-positions($tansShapes);
@include generate-winning-combinations($winningCombinations);
